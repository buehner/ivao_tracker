# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths:
      - '**.py'
      - 'Makefile'
      - 'requirements*.txt'
      - '.github/workflows/main.yml'
    branches: [ main ]
  pull_request:
    paths:
      - '**.py'
      - 'Makefile'
      - 'requirements*.txt'
      - '.github/workflows/main.yml'
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linter:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=\"$HOME/.local/bin:\$PATH\"" >> $GITHUB_ENV
      - name: Install project
        run: make install
      - name: Show venv path
        run: poetry env info --path
      - name: Activate virtual env
        run: source $(poetry env info --path)/bin/activate
      - name: Run linter
        run: make lint

  test:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=\"$HOME/.local/bin:\$PATH\"" >> $GITHUB_ENV
      - name: Install project
        run: make install
      - name: Show venv path
        run: poetry env info --path
      - name: Activate virtual env
        run: source $(poetry env info --path)/bin/activate
      - name: Run tests
        run: make test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
